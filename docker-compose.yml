services:
  pgadmin:
    container_name: k100-pgadmin
    image: dpage/pgadmin4
    environment:
      - TZ=${TZ}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_healthy
    restart: ${RESTART}
    networks:
      - k100

  db:
    container_name: k100-db
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: ${RESTART}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - k100

  api:
    container_name: k100-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
      - ./gpx:/gpx
    ports:
      - "8000:8000"
    environment:
      - TZ=${TZ}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - STRAVA_CLIENT_ID=${STRAVA_CLIENT_ID}
      - STRAVA_CLIENT_SECRET=${STRAVA_CLIENT_SECRET}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FRONTEND_URL=http://localhost:3000
      - PROJECT_NAME=${PROJECT_NAME}
      - SOURCE_GPX_PATH=gpx
    depends_on:
      db:
        condition: service_healthy
    restart: ${RESTART}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 120s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - k100

  frontend:
    container_name: k100-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - TZ=${TZ}
      - API_URL=http://api:8000
      - NEXT_PUBLIC_PROJECT_NAME=${PROJECT_NAME}
    depends_on:
      - api
    restart: ${RESTART}
    networks:
      - k100

  worker:
    container_name: k100-worker
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker:/app
      - ./backend:/app/backend
      - ./backend/data:/app/data
      - ./gpx:/gpx
    environment:
      - TZ=${TZ}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - STRAVA_CLIENT_ID=${STRAVA_CLIENT_ID}
      - STRAVA_CLIENT_SECRET=${STRAVA_CLIENT_SECRET}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SOURCE_GPX_PATH=gpx
      - FRONTEND_URL=http://localhost:3000
      - PROJECT_NAME=${PROJECT_NAME}
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: ${RESTART}
    networks:
      - k100

  mailpit:
    image: axllent/mailpit
    container_name: k100-mailpit
    restart: unless-stopped
    volumes:
      - mailpit_data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - k100

volumes:
  postgres_data:
  pgadmin_data:
  mailpit_data:

networks:
  k100:
    external: true